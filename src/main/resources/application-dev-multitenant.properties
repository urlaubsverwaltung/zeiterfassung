server.port=8060

# Cache
spring.web.resources.static-locations=file:src/main/resources/static/,file:target/classes/static/
spring.web.resources.cache.period=0
spring.web.resources.cache.cachecontrol.no-cache=true
spring.web.resources.cache.cachecontrol.no-store=true
spring.web.resources.chain.strategy.content.enabled=false
spring.thymeleaf.prefix=file:src/main/resources/templates/
spring.thymeleaf.cache=false

# Database
spring.datasource.username=app_user
spring.datasource.password=app_password
spring.jpa.hibernate.ddl-auto=validate

admin.datasource.url=${spring.datasource.url}
admin.datasource.username=admin_user
admin.datasource.password=admin_password

# Security
## oidc configuration for the master tenant
spring.security.oauth2.client.registration.master.client-id=zeiterfassung
spring.security.oauth2.client.registration.master.client-secret=FEWQK0cBatgWCMx1HyM8jPceN35sDRM8
spring.security.oauth2.client.registration.master.client-name=zeiterfassung
spring.security.oauth2.client.registration.master.provider=master
spring.security.oauth2.client.registration.master.scope=openid,profile,email,roles
spring.security.oauth2.client.registration.master.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.master.redirect-uri=http://{baseHost}:8060/login/oauth2/code/{registrationId}
spring.security.oauth2.client.provider.master.issuer-uri=http://localhost:8090/auth/realms/master

# oidc configuration for the b0838c26 tenant
spring.security.oauth2.client.registration.b0838c26.client-id=zeiterfassung
spring.security.oauth2.client.registration.b0838c26.client-secret=IbIm8MVjF4wbBif3qK1fsHuNheRuJ6YO
spring.security.oauth2.client.registration.b0838c26.client-name=zeiterfassung
spring.security.oauth2.client.registration.b0838c26.provider=b0838c26
spring.security.oauth2.client.registration.b0838c26.scope=openid,profile,email,roles
spring.security.oauth2.client.registration.b0838c26.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.b0838c26.redirect-uri=http://{baseHost}:8060/login/oauth2/code/{registrationId}
spring.security.oauth2.client.provider.b0838c26.issuer-uri=http://localhost:8090/auth/realms/b0838c26

# Security
zeiterfassung.security.oidc.server-url=http://localhost:8090/auth
zeiterfassung.security.oidc.redirect-uri-template={baseScheme}://{baseHost}:${server.port}/login/oauth2/code/{registrationId}
zeiterfassung.security.oidc.login-form-url=http://localhost:8060/oauth2/authorization/b0838c26
zeiterfassung.security.oidc.claim-mapper=keycloak

# Demodata
zeiterfassung.development.demodata.create=true
# creates time entries 14 days in past
#zeiterfassung.development.demodata.past=P14D
# create time entries 2 days in future
#zeiterfassung.development.demodata.future=P2D

# Tenant
zeiterfassung.tenant.registration.enabled=true
zeiterfassung.tenant.mode=multi

# Mail Configuration
spring.mail.host=localhost
spring.mail.port=1025

# Messaging
zeiterfassung.rabbitmq.manage-topology=false
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration
## register oidc-clients via messaging
zeiterfassung.integration.oidc.client-registration.enabled=false

