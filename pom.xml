<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.5.0</version>
  </parent>

  <groupId>de.focus-shift</groupId>
  <artifactId>zeiterfassung</artifactId>
  <version>2.24.0-SNAPSHOT</version>

  <name>Zeiterfassung</name>

  <properties>
    <maven.compiler.showWarnings>true</maven.compiler.showWarnings>
    <maven.compiler.showDeprecation>true</maven.compiler.showDeprecation>
    <java.version>21</java.version>

    <!-- Remove commons-compress dependency when testcontainers ships with commons-compress >= 1.27.1, see
     https://github.com/testcontainers/testcontainers-java/issues/8338
     https://www.cve.org/CVERecord?id=CVE-2024-25710
     https://www.cve.org/CVERecord?id=CVE-2024-26308
    -->
    <commons-compress.version>1.27.1</commons-compress.version>

    <!-- see https://nvd.nist.gov/vuln/detail/CVE-2025-49146 -->
    <postgresql.version>42.7.7</postgresql.version>

    <node.env>production</node.env>
    <docker-publish-registry>registry.example.com</docker-publish-registry>
    <docker-publish-registry-path>path/example</docker-publish-registry-path>
    <docker-publish-registry-username>username</docker-publish-registry-username>
    <docker-publish-registry-password>password</docker-publish-registry-password>
  </properties>

  <scm>
    <url>https://github.com/urlaubsverwaltung/zeiterfassung</url>
    <developerConnection>scm:git:git@github.com:urlaubsverwaltung/zeiterfassung.git</developerConnection>
    <connection>scm:git:git@github.com:urlaubsverwaltung/zeiterfassung.git</connection>
    <tag>HEAD</tag>
  </scm>

  <dependencies>

    <dependency>
      <groupId>de.focus-shift</groupId>
      <artifactId>launchpad</artifactId>
      <version>1.2.0</version>
    </dependency>
    <dependency>
      <groupId>de.focus-shift.urlaubsverwaltung.extension.api</groupId>
      <artifactId>model-events</artifactId>
      <version>2.3.2</version>
    </dependency>

    <!-- PUBLIC HOLIDAYS INFORMATION -->
    <dependency>
      <groupId>de.focus-shift</groupId>
      <artifactId>jollyday-core</artifactId>
      <version>1.5.4</version>
    </dependency>
    <dependency>
      <groupId>de.focus-shift</groupId>
      <artifactId>jollyday-jaxb</artifactId>
      <version>1.5.4</version>
    </dependency>

    <!-- Shedlock -->
    <dependency>
      <groupId>net.javacrumbs.shedlock</groupId>
      <artifactId>shedlock-spring</artifactId>
      <version>6.9.0</version>
    </dependency>
    <dependency>
      <groupId>net.javacrumbs.shedlock</groupId>
      <artifactId>shedlock-provider-jdbc-template</artifactId>
      <version>6.9.0</version>
    </dependency>

    <!-- Security -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-oauth2-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.thymeleaf.extras</groupId>
      <artifactId>thymeleaf-extras-springsecurity6</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.dasniko</groupId>
      <artifactId>testcontainers-keycloak</artifactId>
      <version>3.7.0</version>
      <scope>test</scope>
      <exclusions>
        <!--
        resteasy-client 6.x depends on an older jandex version as spring-boot-starter-data-jpa which then throws:
        java.lang.NoSuchMethodError: 'org.jboss.jandex.ClassSummary org.jboss.jandex.Indexer.indexWithSummary(java.io.InputStream)'
        -->
        <exclusion>
          <groupId>org.jboss.resteasy</groupId>
          <artifactId>resteasy-client</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-client</artifactId>
      <!-- resteasy-client 7.x does not include jandex dependency -->
      <version>7.0.0.Beta1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.threeten</groupId>
      <artifactId>threeten-extra</artifactId>
      <version>1.8.0</version>
    </dependency>

    <!-- SESSION -->
    <dependency>
      <groupId>org.springframework.session</groupId>
      <artifactId>spring-session-core</artifactId>
    </dependency>

    <!-- Web -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>
    <dependency>
      <groupId>com.connect-group</groupId>
      <artifactId>thymeleaf-extras</artifactId>
      <version>2.0.2</version>
    </dependency>

    <!-- Validation -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <!-- Mail -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-mail</artifactId>
    </dependency>

    <!-- Message Broker -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-amqp</artifactId>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>rabbitmq</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Database -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-envers</artifactId>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- DevTools -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-docker-compose</artifactId>
      <optional>true</optional>
    </dependency>

    <!-- Monitoring -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- Configuration Properties -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>

    <!-- Test -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.amqp</groupId>
      <artifactId>spring-rabbit-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-testcontainers</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-compress</artifactId>
      <version>${commons-compress.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- UI Tests -->
    <dependency>
      <groupId>com.microsoft.playwright</groupId>
      <artifactId>playwright</artifactId>
      <version>1.51.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.tngtech.archunit</groupId>
      <artifactId>archunit-junit5</artifactId>
      <version>1.4.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Spring Boot -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <profiles>
            <profile>dev-singletenant</profile>
          </profiles>
          <image>
            <name>
              ${docker-publish-registry}/${docker-publish-registry-path}/${project.artifactId}:${project.version}
            </name>
          </image>
          <docker>
            <publishRegistry>
              <username>${docker-publish-registry-username}</username>
              <password>${docker-publish-registry-password}</password>
            </publishRegistry>
          </docker>
        </configuration>
      </plugin>

      <!-- Frontend assets -->
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>1.15.1</version>
        <configuration>
          <nodeVersion>v22.15.0</nodeVersion>
          <npmVersion>10.9.2</npmVersion>
          <environmentVariables>
            <NODE_ENV>${node.env}</NODE_ENV>
          </environmentVariables>
        </configuration>
        <executions>
          <!-- Install node/npm binary to run npm/node scripts-->
          <execution>
            <id>install-node-and-npm</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
          </execution>
          <!-- Install all project dependencies exactly defined in package-lock.json -->
          <execution>
            <id>install-npm-dependencies</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>ci</arguments>
            </configuration>
          </execution>
          <!-- Static Code Analysis -->
          <execution>
            <id>npm-lint</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>run lint</arguments>
            </configuration>
          </execution>
          <!-- run Tests -->
          <execution>
            <id>npm-test</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>test</phase>
            <configuration>
              <arguments>run test:coverage</arguments>
            </configuration>
          </execution>
          <!-- Build -->
          <execution>
            <id>npm-build</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>run build</arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Integration tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>

      <!-- Enforcer -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.5.0</version>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>3.8.3</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>${java.version}</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Editorconfig -->
      <plugin>
        <groupId>org.ec4j.maven</groupId>
        <artifactId>editorconfig-maven-plugin</artifactId>
        <version>0.1.3</version>
        <executions>
          <execution>
            <id>check</id>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <excludes>
            <exclude>node/**</exclude>
            <exclude>node_modules/**</exclude>
            <exclude>.mvn/**</exclude>
            <exclude>.m2/**</exclude>
            <exclude>.jdk/**</exclude>
            <exclude>**/*.woff</exclude>
            <exclude>mvnw</exclude>
            <exclude>mvnw.cmd</exclude>
            <exclude>keycloak-export/**</exclude>
            <exclude>src/main/resources/static/fonts/**</exclude>
          </excludes>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <!-- Run only UI Tests with `mvn verify` ignoring other integration tests -->
    <profile>
      <id>ui-test</id>
      <build>
        <plugins>
          <!-- skip javascript linting and tests -->
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>npm-lint</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>npm-test</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <!-- skip unit tests -->
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <skipTests>true</skipTests>
            </configuration>
          </plugin>
          <!-- run ui tests -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <groups>ui</groups>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>coverage</id>
      <build>
        <plugins>

          <!-- Coverage -->
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.13</version>
            <executions>
              <execution>
                <id>default-prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>default-prepare-agent-integration</id>
                <goals>
                  <goal>prepare-agent-integration</goal>
                </goals>
              </execution>
              <execution>
                <id>default-report</id>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
              <execution>
                <id>default-report-integration</id>
                <goals>
                  <goal>report-integration</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <!-- sonar -->
          <plugin>
            <groupId>org.sonarsource.scanner.maven</groupId>
            <artifactId>sonar-maven-plugin</artifactId>
            <version>5.1.0.4751</version>
          </plugin>

        </plugins>
      </build>
    </profile>
  </profiles>

</project>
