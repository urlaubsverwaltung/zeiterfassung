name: Release

on:
  push:
    tags:
      - 'zeiterfassung*'

env:
  MAVEN_ARGS: "--no-transfer-progress --errors --fail-at-end --show-version"

jobs:
  create-github-release:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: 21
          cache: 'maven'
      - name: Build with Maven
        run: ./mvnw package
      - name: Extract release tag
        id: vars
        run: echo "version=${GITHUB_REF#refs/*/zeiterfassung-}" >> $GITHUB_OUTPUT
      - name: Create Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Release Zeiterfassung ${{ steps.vars.outputs.version }}
          body_path: .chglog/${{ steps.vars.outputs.version }}.md
          files: |
              ./target/zeiterfassung-*.jar

  container-upload-docker-hub-zeiterfassung:
    needs:
      - create-github-release
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: '21'
          cache: 'maven'
      - name: Publish docker image to Docker Hub zeiterfassung
        run: >
          ./mvnw
          spring-boot:build-image
          -Dspring-boot.build-image.publish=true
          -Ddocker-publish-registry=registry.hub.docker.com
          -Ddocker-publish-registry-path=urlaubsverwaltung
          -Ddocker-publish-registry-username=${{ secrets.DOCKER_ZE_USERNAME }}
          -Ddocker-publish-registry-password=${{ secrets.DOCKER_ZE_TOKEN }}

  container-upload-github:
    needs:
      - create-github-release
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: '21'
          cache: 'maven'
      - name: Publish docker image to GitHub Container Registry
        run: >
          ./mvnw spring-boot:build-image
          -Dspring-boot.build-image.publish=true
          -Ddocker-publish-registry=ghcr.io
          -Ddocker-publish-registry-path=${{ github.repository }}
          -Ddocker-publish-registry-username=${{ github.actor }}
          -Ddocker-publish-registry-password=${{ secrets.GITHUB_TOKEN }}
